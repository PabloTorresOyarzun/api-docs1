# nginx.conf - Configuración mejorada para producción (SSL comentado)
events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;  # Ajustar según MAX_FILE_SIZE_MB
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    
    # Timeouts
    client_body_timeout 60s;
    client_header_timeout 60s;
    send_timeout 60s;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Hide nginx version
    server_tokens off;
    
    # Upstream backend
    upstream api {
        server api:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # HTTP Server - Configuración principal (sin redirect a HTTPS)
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt challenge (comentado hasta tener dominio)
        # location /.well-known/acme-challenge/ {
        #     root /var/www/certbot;
        #     try_files $uri =404;
        # }
        
        # Redirect a HTTPS (comentado hasta tener SSL)
        # location / {
        #     return 301 https://$host$request_uri;
        # }
        
        # Security
        limit_conn addr 20;
        
        # Root location - rate limited
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # Para procesamiento largo
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }
        
        # Auth endpoints - más restrictivo
        location ~ ^/(auth|login) {
            limit_req zone=auth burst=5 nodelay;
            limit_conn addr 5;
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Upload endpoints - rate limiting específico
        location ~ ^/(individual|sgd).*/procesar {
            limit_req zone=upload burst=5 nodelay;
            limit_conn addr 3;
            
            proxy_pass http://api;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts más largos para uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 600s;  # 10 minutos para procesamiento
            
            # Request buffering
            proxy_request_buffering off;
            proxy_buffering off;
        }
        
        # Health checks - sin rate limiting
        location ~ ^/(health|metrics) {
            access_log off;
            
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }
        
        # Docs - habilitado para desarrollo/testing
        location ~ ^/(docs|redoc|openapi.json) {
            # En producción con SSL, bloquear o requerir auth
            # return 404;
            
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Static files caching (si los hay)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1M;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(env|git|svn|htaccess|htpasswd)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Block suspicious requests
        location ~* (eval\(|base64_|javascript:|data:) {
            deny all;
            access_log off;
        }
        
        # Custom error pages
        error_page 404 /404.json;
        error_page 500 502 503 504 /50x.json;
        
        location = /404.json {
            internal;
            return 404 '{"error": "Not Found", "status": 404}';
            add_header Content-Type application/json always;
        }
        
        location = /50x.json {
            internal;
            return 500 '{"error": "Internal Server Error", "status": 500}';
            add_header Content-Type application/json always;
        }
    }
    
    # HTTPS Server - Configuración SSL (COMENTADO HASTA TENER DOMINIO)
    # server {
    #     listen 443 ssl http2;
    #     server_name _;
    #     
    #     # SSL Configuration - usar wildcard para cualquier dominio certificado
    #     ssl_certificate /etc/letsencrypt/live/*/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/*/privkey.pem;
    #     
    #     # SSL Protocols and Ciphers - Configuración moderna y segura
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 1d;
    #     ssl_session_tickets off;
    #     
    #     # OCSP Stapling
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     ssl_trusted_certificate /etc/letsencrypt/live/*/chain.pem;
    #     
    #     # Security Headers para HTTPS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #     add_header X-Frame-Options DENY always;
    #     add_header X-Content-Type-Options nosniff always;
    #     add_header X-XSS-Protection "1; mode=block" always;
    #     add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    #     
    #     # Security
    #     limit_conn addr 20;
    #     
    #     # Root location - rate limited
    #     location / {
    #         limit_req zone=api burst=20 nodelay;
    #         
    #         proxy_pass http://api;
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection "";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header X-Request-ID $request_id;
    #         
    #         # Timeouts
    #         proxy_connect_timeout 60s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 300s;
    #         
    #         # Buffering
    #         proxy_buffering on;
    #         proxy_buffer_size 4k;
    #         proxy_buffers 8 4k;
    #         proxy_busy_buffers_size 8k;
    #     }
    #     
    #     # Auth endpoints - más restrictivo
    #     location ~ ^/(auth|login) {
    #         limit_req zone=auth burst=5 nodelay;
    #         limit_conn addr 5;
    #         
    #         proxy_pass http://api;
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection "";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         proxy_connect_timeout 30s;
    #         proxy_send_timeout 30s;
    #         proxy_read_timeout 30s;
    #     }
    #     
    #     # Upload endpoints - rate limiting específico
    #     location ~ ^/(individual|sgd).*/procesar {
    #         limit_req zone=upload burst=5 nodelay;
    #         limit_conn addr 3;
    #         
    #         proxy_pass http://api;
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection "";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         # Timeouts más largos para uploads
    #         proxy_connect_timeout 60s;
    #         proxy_send_timeout 300s;
    #         proxy_read_timeout 600s;
    #         
    #         # Request buffering
    #         proxy_request_buffering off;
    #         proxy_buffering off;
    #     }
    #     
    #     # Health checks - sin rate limiting
    #     location ~ ^/(health|metrics) {
    #         access_log off;
    #         
    #         proxy_pass http://api;
    #         proxy_set_header Host $host;
    #         proxy_connect_timeout 5s;
    #         proxy_send_timeout 5s;
    #         proxy_read_timeout 5s;
    #     }
    #     
    #     # Docs - bloquear en producción
    #     location ~ ^/(docs|redoc|openapi.json) {
    #         return 404;
    #         
    #         # proxy_pass http://api;
    #         # proxy_set_header Host $host;
    #         # proxy_set_header X-Real-IP $remote_addr;
    #     }
    #     
    #     # Static files caching
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
    #         expires 1M;
    #         add_header Cache-Control "public, immutable";
    #         access_log off;
    #     }
    #     
    #     # Block common attack patterns
    #     location ~ /\. {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #     
    #     location ~* \.(env|git|svn|htaccess|htpasswd)$ {
    #         deny all;
    #         access_log off;
    #         log_not_found off;
    #     }
    #     
    #     # Block suspicious requests
    #     location ~* (eval\(|base64_|javascript:|data:) {
    #         deny all;
    #         access_log off;
    #     }
    #     
    #     # Custom error pages
    #     error_page 404 /404.json;
    #     error_page 500 502 503 504 /50x.json;
    #     
    #     location = /404.json {
    #         internal;
    #         return 404 '{"error": "Not Found", "status": 404}';
    #         add_header Content-Type application/json always;
    #     }
    #     
    #     location = /50x.json {
    #         internal;
    #         return 500 '{"error": "Internal Server Error", "status": 500}';
    #         add_header Content-Type application/json always;
    #     }
    # }
}